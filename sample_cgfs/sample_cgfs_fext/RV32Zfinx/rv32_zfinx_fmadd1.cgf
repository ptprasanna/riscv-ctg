# For Licence details look at https://gitlab.com/incoresemi/riscv-compliance/riscv_ctg/-/blob/master/LICENSE.incore

fmadd_b2:
    config: 
      - check ISA:=regex(.*I.*_Zfinx.*)
    opcode: 
      fmadd.s: 0
    rs1: 
      <<: *all_regs
    rs2:
      <<: *all_regs
    rs3:
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *r4fmt_op_comb
    val_comb:
      abstract_comb:
        'ibm_b2(32, "fmadd.s", 3)': 0
        
fmadd_b3:
    config: 
      - check ISA:=regex(.*I.*_Zfinx.*)
    opcode: 
      fmadd.s: 0
    rs1: 
      <<: *all_regs
    rs2:
      <<: *all_regs
    rs3:
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *r4fmt_op_comb
    val_comb:
      abstract_comb:
        'ibm_b3(32, "fmadd.s", 3)': 0
        
fmadd_b4:
    config: 
      - check ISA:=regex(.*I.*_Zfinx.*)
    opcode: 
      fmadd.s: 0
    rs1: 
      <<: *all_regs
    rs2:
      <<: *all_regs
    rs3:
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *r4fmt_op_comb
    val_comb:
      abstract_comb:
        'ibm_b4(32, "fmadd.s", 3)': 0
        
fmadd_b5:
    config: 
      - check ISA:=regex(.*I.*_Zfinx.*)
    opcode: 
      fmadd.s: 0
    rs1: 
      <<: *all_regs
    rs2:
      <<: *all_regs
    rs3:
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *r4fmt_op_comb
    val_comb:
      abstract_comb:
        'ibm_b5(32, "fmadd.s", 3)': 0
        
fmadd_b6:
    config: 
      - check ISA:=regex(.*I.*_Zfinx.*)
    opcode: 
      fmadd.s: 0
    rs1: 
      <<: *all_regs
    rs2:
      <<: *all_regs
    rs3:
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *r4fmt_op_comb
    val_comb:
      abstract_comb:
        'ibm_b6(32, "fmadd.s", 3)': 0
        
fmadd_b7:
    config: 
      - check ISA:=regex(.*I.*_Zfinx.*)
    opcode: 
      fmadd.s: 0
    rs1: 
      <<: *all_regs
    rs2:
      <<: *all_regs
    rs3:
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *r4fmt_op_comb
    val_comb:
      abstract_comb:
        'ibm_b7(32, "fmadd.s", 3)': 0
        
fmadd_b8:
    config: 
      - check ISA:=regex(.*I.*_Zfinx.*)
    opcode: 
      fmadd.s: 0
    rs1: 
      <<: *all_regs
    rs2:
      <<: *all_regs
    rs3:
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *r4fmt_op_comb
    val_comb:
      abstract_comb:
        'ibm_b8(32, "fmadd.s", 3)': 0
        
fmadd_b14:
    config: 
      - check ISA:=regex(.*I.*_Zfinx.*)
    opcode: 
      fmadd.s: 0
    rs1: 
      <<: *all_regs
    rs2:
      <<: *all_regs
    rs3:
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *r4fmt_op_comb
    val_comb:
      abstract_comb:
        'ibm_b14(32, "fmadd.s", 3)': 0
        
fmadd_b16:
    config: 
      - check ISA:=regex(.*I.*_Zfinx.*)
    opcode: 
      fmadd.s: 0
    rs1: 
      <<: *all_regs
    rs2:
      <<: *all_regs
    rs3:
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *r4fmt_op_comb
    val_comb:
      abstract_comb:
        'ibm_b16(32, "fmadd.s", 3)': 0
        
fmadd_b17:
    config: 
      - check ISA:=regex(.*I.*_Zfinx.*)
    opcode: 
      fmadd.s: 0
    rs1: 
      <<: *all_regs
    rs2:
      <<: *all_regs
    rs3:
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *r4fmt_op_comb
    val_comb:
      abstract_comb:
        'ibm_b17(32, "fmadd.s", 3)': 0
        
fmadd_b18:
    config: 
      - check ISA:=regex(.*I.*_Zfinx.*)
    opcode: 
      fmadd.s: 0
    rs1: 
      <<: *all_regs
    rs2:
      <<: *all_regs
    rs3:
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *r4fmt_op_comb
    val_comb:
      abstract_comb:
        'ibm_b18(32, "fmadd.s", 3)': 0
